#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// OS設定を日本語キーボードのまま使用するための変換定義
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角
&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_SHIFT TAB  &kp W            &kp E           &kp R       &kp T                                       &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A               &kp S            &kp D           &kp F       &kp G      &kp LC(UP)        &kp HOME       &kp H        &kp J  &kp K      &kp L    &lt 2 MINUS
&lt 1 Z             &kp X            &kp C           &kp V       &kp B      &kp LC(DOWN)      &kp END        &kp N        &kp M  &kp COMMA  &kp DOT  &lt 3 SLASH
&kp LALT            &lt 6 JP_HANZEN  &mt LEFT_WIN Q  &kp DELETE  &kp SPACE  &kp LCTRL         &kp BACKSPACE  &lt 1 ENTER                             &lt 5 ESC
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &kp F1  &kp F2   &kp F3   &kp F4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp STAR  &kp F5  &kp F6   &kp F7   &kp F8
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LPAR  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        NUM_ARROW {
            bindings = <
&trans            &trans          &kp UP_ARROW    &kp EXCL   &kp QMARK                      &kp EQUAL          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS
&kp LEFT_BRACKET  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp DQT    &trans      &trans  &kp RIGHT_BRACKET  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans
&trans            &trans          &trans          &trans     &kp COLON  &trans      &trans  &kp BSLH           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SLASH
&trans            &trans          &trans          &trans     &trans     &trans      &trans  &kp KP_NUMBER_0                                                       &kp KP_NUMLOCK
            >;
        };

        BT {
            bindings = <
&trans  &trans  &trans  &trans  &trans                          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &bt BT_CLR  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans      &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans      &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans          &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans          &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans          &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                             &kp LC(W)  &trans     &trans     &trans    &kp LC(LS(T))
&trans  &trans  &trans  &trans  &trans  &kp SQT            &trans  &trans     &mkp MB4   &mkp MB3   &mkp MB5  &trans
&trans  &trans  &trans  &trans  &trans  &kp SEMICOLON      &trans  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans             &trans  &trans                                     &trans
            >;
        };

        SHIFT_NUM {
            bindings = <
&trans  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                      &kp CARET  &kp AMPS  &trans  &trans  &kp JP_YEN
&trans  &trans  &trans    &trans    &trans     &trans      &trans  &trans     &trans    &trans  &trans  &kp LS(LG(S))
&trans  &trans  &trans    &trans    &trans     &trans      &trans  &trans     &trans    &trans  &trans  &kp UNDERSCORE
&trans  &trans  &trans    &trans    &trans     &trans      &trans  &trans                               &trans
            >;
        };
    };
};
